services:
  postgres:
    # Use specific PostgreSQL version for consistency
    image: postgres:15-alpine
    
    # Container name for easy identification and management
    container_name: kitchen365-postgres
    
    # Environment variables from .env file for security
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}  
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Additional security - disable trust authentication
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_AUTH_METHOD}
    
    # Port mapping with environment variable for flexibility
    ports:
      - "${POSTGRES_PORT}:5432"

    # Persistent data storage
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Optional: custom PostgreSQL configuration
      # - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    
    # Network configuration
    networks:
      - kitchen365-network
    
    # Production-grade configurations
    restart: unless-stopped
    
    # Resource limits to prevent resource exhaustion
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Health check for monitoring and orchestration
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    # Security: run as non-root user (commented out for debugging)
    # user: "999:999"
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # pgAdmin - PostgreSQL GUI Interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kitchen365-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      # Optional: Pre-configure database connections
      # - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - kitchen365-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
    # Optional: specify driver options for production storage
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: /var/lib/docker/volumes/kitchen365_postgres
  
  pgadmin_data:
    driver: local

# Custom network for service isolation
networks:
  kitchen365-network:
    driver: bridge
    # Optional: custom network configuration
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16